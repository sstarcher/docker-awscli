
usage()
{
  echo 
  echo "Environment Variables"
  echo "  DEVICE_ID: Block device mapping (Default /dev/xvdf)"
  echo "  VOLUME_ID: The ID of the AWS volume (example vol-xxxxxxxx) Required"
  echo "Docs - http://docs.aws.amazon.com/cli/latest/reference/ec2/attach-volume.html"
}


attached-instance()
{
  aws ec2 describe-volumes --volume-id ${VOLUME_ID} --query 'Volumes[].Attachments[].InstanceId' --output text
}

volume-state()
{
  aws ec2 describe-volumes --volume-id ${VOLUME_ID} --query 'Volumes[].State' --output text
}

run()
{
  METADATA_URL='http://169.254.169.254/latest/meta-data/'
  DEVICE_ID=${DEVICE_ID:-'/dev/xvdf'}
  export AWS_DEFAULT_REGION=$(curl -s --fail http://169.254.169.254/latest/dynamic/instance-identity/document | awk -F\" '/region/ {print $4}')

  if [ -z "$VOLUME_ID" ]; then 
    echo 'VOLUME_ID must be set'; 
    exit 1 
  fi

  INSTANCE=$(curl --fail ${METADATA_URL}instance-id 2> /dev/null)
  if [[ $(volume-state) == 'available' ]]; then
    aws ec2 attach-volume --instance-id ${INSTANCE}  --device ${DEVICE_ID} --volume-id ${VOLUME_ID} > /dev/null
    while [ $(volume-state) != 'in-use' ]; do sleep 1; done
  else
    ATTACHED_INSTANCE=$(attached-instance)
    if [[ "$ATTACHED_INSTANCE" == "$INSTANCE" ]]; then
      echo 'Volume is already attached to this instance'
      exit 0
    else
      echo "The volume is attached to instance ${ATTACHED_INSTANCE}"
      exit 1
    fi

  fi
}

"$@"


